name: Build .NET

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    # [Previous steps...]

    - name: Check Latest Release
      id: latest_release
      uses: octokit/request-action@v2.x
      with:
        route: GET /repos/PrimeEagle/${{ secrets.DOTNET_SOLUTION }}/releases/latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true

    - name: Compare with version.json
      run: |
        $versionJson = Get-Content 'version.json' | ConvertFrom-Json
        $latestReleaseTag = ${{ steps.latest_release.outputs.data.tag_name }}
        if (-not $latestReleaseTag -or $latestReleaseTag -ne $versionJson.version) {
          echo "RELEASE_NEEDED=true" >> $GITHUB_ENV
          echo "VERSION=$($versionJson.version)" >> $GITHUB_ENV
        }
      shell: pwsh
      env:
        DOTNET_ROOT: C:\Users\runneradmin\AppData\Local\Microsoft\dotnet

    - name: Create Release
      if: env.RELEASE_NEEDED == 'true'
      run: |
        try {
            $tag_name = $env:VERSION
            $release_name = "Release $tag_name"
            $release_notes = "Release $tag_name"
            
            $uri = "https://api.github.com/repos/PrimeEagle/${{ secrets.DOTNET_SOLUTION }}/releases"
            $headers = @{
                Authorization = "Bearer ${{ secrets.GITHUB_TOKEN }}"
                Accept = "application/vnd.github.v3+json"
            }
            $body = @{
                tag_name = $tag_name
                name = $release_name
                body = $release_notes
            }
            
            Invoke-RestMethod -Uri $uri -Headers $headers -Method Post -Body ($body | ConvertTo-Json)
        } catch {
            echo "Error creating release: $_"
        }
      shell: pwsh
      env:
        DOTNET_ROOT: C:\Users\runneradmin\AppData\Local\Microsoft\dotnet
